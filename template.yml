AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An AWS Serverless Specification template describing your function.
Resources:
  LF2:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lf2.lambda_function.lambda_handler
      Runtime: python3.7
      CodeUri: .
      Description: ''
      MemorySize: 528
      Timeout: 30
      Role: >-
        arn:aws:iam::189187153403:role/serverlessrepo-s3-image-indexe-IndexerFunctionRole-1B7JN8PGHDO3H
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /search
            Method: GET
        Api2:
          Type: Api
          Properties:
            Path: /MyResource
            Method: ANY
    IndexerFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Description: 'Run Rekognition detect labels from S3 events and store results in ElasticSearch.'
      Handler: es.lambda_function.lambda_handler
      Runtime: python3.6
      CodeUri: ./
      Timeout: 30
      Policies:
        - AmazonS3ReadOnlyAccess
        - AmazonRekognitionFullAccess
      Environment:
        Variables:
          ELASTICSEARCH_URL: !GetAtt IndexStore.DomainEndpoint
      Events:
        S3JpgEvent:
          Type: S3
          Properties:
            Bucket: !Ref ImageBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  -
                    Name: suffix
                    Value: jpg
        S3PngEvent:
          Type: S3
          Properties:
            Bucket: !Ref ImageBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  -
                    Name: suffix
                    Value: png

  IndexStore:
    Type: 'AWS::Elasticsearch::Domain'
    Properties:
      ElasticsearchClusterConfig: 
        DedicatedMasterEnabled: "false"
        InstanceCount: "2"
        ZoneAwarenessEnabled: "true"
        InstanceType: "m4.large.elasticsearch"
      EBSOptions: 
        EBSEnabled: true
        Iops: 0
        VolumeSize: 20
        VolumeType: 'gp2'
      ElasticsearchVersion: 6.0
      AdvancedOptions: 
        rest.action.multi.allow_explicit_index: "true"
      AccessPolicies: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              AWS: "*"
            Action: "es:*"
            Resource: !Sub "arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/*"

  ImageBucket:
    Type: 'AWS::S3::Bucket'
